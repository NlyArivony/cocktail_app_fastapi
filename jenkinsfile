pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/cicd']], userRemoteConfigs: [[url: 'https://github.com/NlyArivony/cocktail_app_fastapi.git']]])
            }
        }

        stage('Create Virtual Environment and Run App') {
            steps {
                script {
                    // Create a virtual environment in the fetched source code directory
                    sh 'python3 -m venv venv'

                    // Activate the virtual environment and install requirements
                    sh './venv/bin/python3 -m pip install -r requirements-jenkins.txt'

                    // Run your FastAPI app using run.py
                    sh './venv/bin/python3 run.py &'

                    // Wait for the app to start (you can adjust the sleep duration)
                    sleep time: 30, unit: 'SECONDS'
                }
            }
        }

        stage('Run Tests (Virtual Environment)') {
            steps {
                script {
                    // Run pytest inside the same virtual environment
                    sh './venv/bin/python3 -m pytest'

                    // Optionally, you can stop the FastAPI app
                    sh 'pkill -f "python3 run.py"'
                }
            }
        }
            

        stage('Build Docker Image') {
            steps {
                script {
                    def customImageTag = "my-python-app:${env.BUILD_NUMBER}"
                    docker.build(customImageTag, ".")
                }
            }
        }

        stage('Create container and run Tests') {
            steps {
                script {
                    def customImageTag = "my-python-app:${env.BUILD_NUMBER}"
                    def containerName = "my-container-${env.BUILD_NUMBER}" // Use a unique container name

                    def containerId = docker.image(customImageTag).run("--name ${containerName} -d")

                    // You may wait here if your application requires initialization time
                    // sleep time: 30, unit: 'SECONDS'

                    // Run pytest inside the container
                    sh "docker exec ${containerName} pytest"

                    // Stop and remove the container
                    sh "docker stop ${containerName}"
                    sh "docker rm ${containerName}"
                }
            }
        }
    }

    post {
        success {
            // Clean up after a successful pipeline run
            script {
                sh 'pkill -f "python3 run.py"' // Stop the FastAPI app if it's still running
                sh 'rm -rf venv' // Remove the virtual environment
            }
        }
    }
}
